{"ast":null,"code":"import _classCallCheck from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/paola/go/src/Info441FinalProject/clients/src/Components/CardList.js\";\nimport React, { Component } from \"react\";\nimport \"../Styles/App.css\";\n\nvar CardList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardList, _Component);\n\n  function CardList() {\n    _classCallCheck(this, CardList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardList).apply(this, arguments));\n  }\n\n  _createClass(CardList, [{\n    key: \"render\",\n    value: function render() {\n      var courseCode = this.props.classInfo[1];\n      return React.createElement(\"div\", {\n        class: \"card text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, this.props.classInfo[1]), React.createElement(\"div\", {\n        class: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, this.props.classInfo[2]), React.createElement(\"p\", {\n        class: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, this.props.classInfo[3]), React.createElement(\"a\", {\n        href: \"#\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Add Evaluation\"), React.createElement(\"a\", {\n        href: \"#\",\n        class: \"btn btn-primary\",\n        id: \"readEval\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Read Evaluations\")));\n    } //   getEvals = async (courseID) => {\n    //     const response = await fetch(api.base + api.handlers.courses + \"/\" + courseID + \"/evaluations\", {method: \"GET\"});\n    //     if (response.status >= 300) {\n    //       const error = await response.text();\n    //       this.setError(error);\n    //       return;\n    //     }\n    //     const evals = await response.json();\n    //     // check if there is more than one evaluation for course \n    //     if (evals.length > 0) {\n    //       // get current evals saved in state\n    //       let currEvals = this.state.evals;\n    //       // for each evaluation:\n    //       // -- create array containg all eval information to display\n    //       // -- add eval to currEvals (for state)\n    //       evals.forEach(function(e) {\n    //         let evalInfo = [e.id, e.studentID, e.courseID, e.instructors[0]['name'], e.year, e.quarter, e.creditType, e.credits, e.workload, e.gradingTechniques, e.description, e.likedUsers.length, e.dislikedUsers.length, e.createdAt, e.editedAt]\n    //         currEvals.push(evalInfo);\n    //       })\n    //       this.setState({\n    //         evals: currEvals\n    //       })\n    //       this.setError(\"\");\n    //     }\n    //   }\n\n  }]);\n\n  return CardList;\n}(Component); // class CardList extends Component {\n//   render() {\n//     return <Card id={this.props.classInfo[0]} course={this.props.classInfo[1]} name={this.props.classInfo[2]} d={this.props.classInfo[3]}/>;\n//   }\n// }\n\n\nexport default CardList;","map":{"version":3,"sources":["/Users/paola/go/src/Info441FinalProject/clients/src/Components/CardList.js"],"names":["React","Component","CardList","courseCode","props","classInfo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;;IAEMC,Q;;;;;;;;;;;;;6BAEK;AACP,UAAIC,UAAU,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAjB;AACA,aACI;AAAK,QAAA,KAAK,EAAC,kBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKD,KAAL,CAAWC,SAAX,CAAqB,CAArB,CADL,CADJ,EAII;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwB,KAAKD,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAxB,CADJ,EAEI;AAAG,QAAA,KAAK,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsB,KAAKD,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAtB,CAFJ,EAGI;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,KAAK,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,EAII;AAAG,QAAA,IAAI,EAAC,GAAR;AAAY,QAAA,KAAK,EAAC,iBAAlB;AAAoC,QAAA,EAAE,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,CAJJ,CADJ;AAaD,K,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;EAhDuBJ,S,GAkDvB;AACA;AACA;AACA;AACA;;;AACA,eAAeC,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Styles/App.css\";\n\nclass CardList extends Component {\n\n  render() {\n    var courseCode = this.props.classInfo[1];\n    return (\n        <div class=\"card text-center\">\n            <div class=\"card-header\">\n                {this.props.classInfo[1]} \n            </div>\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{this.props.classInfo[2]}</h5>\n                <p class=\"card-text\">{this.props.classInfo[3]}</p>\n                <a href=\"#\" class=\"btn btn-primary\">Add Evaluation</a>\n                <a href=\"#\" class=\"btn btn-primary\" id=\"readEval\">Read Evaluations</a>\n            </div>\n        </div>\n    );\n  }\n\n//   getEvals = async (courseID) => {\n//     const response = await fetch(api.base + api.handlers.courses + \"/\" + courseID + \"/evaluations\", {method: \"GET\"});\n//     if (response.status >= 300) {\n//       const error = await response.text();\n//       this.setError(error);\n//       return;\n//     }\n\n//     const evals = await response.json();\n    \n//     // check if there is more than one evaluation for course \n//     if (evals.length > 0) {\n//       // get current evals saved in state\n//       let currEvals = this.state.evals;\n\n//       // for each evaluation:\n//       // -- create array containg all eval information to display\n//       // -- add eval to currEvals (for state)\n//       evals.forEach(function(e) {\n//         let evalInfo = [e.id, e.studentID, e.courseID, e.instructors[0]['name'], e.year, e.quarter, e.creditType, e.credits, e.workload, e.gradingTechniques, e.description, e.likedUsers.length, e.dislikedUsers.length, e.createdAt, e.editedAt]\n\n//         currEvals.push(evalInfo);\n//       })\n\n//       this.setState({\n//         evals: currEvals\n//       })\n//       this.setError(\"\");\n//     }\n//   }\n}\n// class CardList extends Component {\n//   render() {\n//     return <Card id={this.props.classInfo[0]} course={this.props.classInfo[1]} name={this.props.classInfo[2]} d={this.props.classInfo[3]}/>;\n//   }\n// }\nexport default CardList;"]},"metadata":{},"sourceType":"module"}