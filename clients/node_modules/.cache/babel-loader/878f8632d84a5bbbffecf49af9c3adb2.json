{"ast":null,"code":"import _regeneratorRuntime from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/paola/go/src/Info441FinalProject/clients/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/paola/go/src/Info441FinalProject/clients/src/Components/CardList.js\";\nimport React, { Component } from \"react\";\nimport \"../Styles/App.css\";\nimport api from './../Constants/APIEndpoints/APIEndpoints';\n\nvar CardList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CardList, _Component);\n\n  function CardList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CardList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CardList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getEvals =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(courseID) {\n        var response, error, evals, currEvals;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(api.base + api.handlers.courses + \"/\" + courseID + \"/evaluations\", {\n                  method: \"GET\"\n                });\n\n              case 2:\n                response = _context.sent;\n\n                if (!(response.status >= 300)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                _context.next = 6;\n                return response.text();\n\n              case 6:\n                error = _context.sent;\n\n                _this.setError(error);\n\n                return _context.abrupt(\"return\");\n\n              case 9:\n                _context.next = 11;\n                return response.json();\n\n              case 11:\n                evals = _context.sent;\n\n                // check if there is more than one evaluation for course \n                if (evals.length > 0) {\n                  // get current evals saved in state\n                  currEvals = _this.state.evals; // for each evaluation:\n                  // -- create array containg all eval information to display\n                  // -- add eval to currEvals (for state)\n\n                  evals.forEach(function (e) {\n                    var evalInfo = [e.id, e.studentID, e.courseID, e.instructors[0]['name'], e.year, e.quarter, e.creditType, e.credits, e.workload, e.gradingTechniques, e.description, e.likedUsers.length, e.dislikedUsers.length, e.createdAt, e.editedAt];\n                    currEvals.push(evalInfo);\n                  });\n\n                  _this.setState({\n                    evals: currEvals\n                  });\n\n                  _this.setError(\"\");\n                }\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(CardList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        class: \"card text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, this.props.classInfo[1]), React.createElement(\"div\", {\n        class: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        class: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, this.props.classInfo[2]), React.createElement(\"p\", {\n        class: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.props.classInfo[3]), React.createElement(\"a\", {\n        href: \"#\",\n        class: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Add Evaluation\"), React.createElement(\"a\", {\n        href: \"#\",\n        class: \"btn btn-primary\",\n        onClick: this.getEvals(this.props.classInfo[0]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Read Evaluations\")));\n    }\n  }]);\n\n  return CardList;\n}(Component); // class CardList extends Component {\n//   render() {\n//     return <Card id={this.props.classInfo[0]} course={this.props.classInfo[1]} name={this.props.classInfo[2]} d={this.props.classInfo[3]}/>;\n//   }\n// }\n\n\nexport default CardList;","map":{"version":3,"sources":["/Users/paola/go/src/Info441FinalProject/clients/src/Components/CardList.js"],"names":["React","Component","api","CardList","getEvals","courseID","fetch","base","handlers","courses","method","response","status","text","error","setError","json","evals","length","currEvals","state","forEach","e","evalInfo","id","studentID","instructors","year","quarter","creditType","credits","workload","gradingTechniques","description","likedUsers","dislikedUsers","createdAt","editedAt","push","setState","props","classInfo"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Styles/App.css\";\nimport api from './../Constants/APIEndpoints/APIEndpoints';\n\nclass CardList extends Component {\n\n  render() {\n    \n    return (\n        <div class=\"card text-center\">\n            <div class=\"card-header\">\n                {this.props.classInfo[1]} \n            </div>\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">{this.props.classInfo[2]}</h5>\n                <p class=\"card-text\">{this.props.classInfo[3]}</p>\n                <a href=\"#\" class=\"btn btn-primary\">Add Evaluation</a>\n                <a href=\"#\" class=\"btn btn-primary\" onClick={this.getEvals(this.props.classInfo[0])}>Read Evaluations</a>\n            </div>\n        </div>\n    );\n  }\n\n  getEvals = async (courseID) => {\n    const response = await fetch(api.base + api.handlers.courses + \"/\" + courseID + \"/evaluations\", {method: \"GET\"});\n    if (response.status >= 300) {\n      const error = await response.text();\n      this.setError(error);\n      return;\n    }\n\n    const evals = await response.json();\n    \n    // check if there is more than one evaluation for course \n    if (evals.length > 0) {\n      // get current evals saved in state\n      let currEvals = this.state.evals;\n\n      // for each evaluation:\n      // -- create array containg all eval information to display\n      // -- add eval to currEvals (for state)\n      evals.forEach(function(e) {\n        let evalInfo = [e.id, e.studentID, e.courseID, e.instructors[0]['name'], e.year, e.quarter, e.creditType, e.credits, e.workload, e.gradingTechniques, e.description, e.likedUsers.length, e.dislikedUsers.length, e.createdAt, e.editedAt]\n\n        currEvals.push(evalInfo);\n      })\n\n      this.setState({\n        evals: currEvals\n      })\n      this.setError(\"\");\n    }\n  }\n}\n// class CardList extends Component {\n//   render() {\n//     return <Card id={this.props.classInfo[0]} course={this.props.classInfo[1]} name={this.props.classInfo[2]} d={this.props.classInfo[3]}/>;\n//   }\n// }\nexport default CardList;"]},"metadata":{},"sourceType":"module"}